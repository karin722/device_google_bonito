<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2017, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>
    <!-- Doze: does this device support STATE_DOZE?  -->
    <bool name="doze_display_state_supported">true</bool>

    <!-- Doze: does this device support STATE_DOZE_SUSPEND?  -->
    <bool name="doze_suspend_display_state_supported">false</bool>

    <!-- Type of a sensor that provides a low-power estimate of the desired display
         brightness, suitable to listen to while the device is asleep (e.g. during
         always-on display) -->
    <string name="doze_brightness_sensor_type" translatable="false">com.google.sensor.binned_brightness</string>

    <!-- Doze: can we assume the pickup sensor includes a proximity check? -->
    <bool name="doze_pickup_performs_proximity_check">true</bool>

    <!-- Doze: whether the double tap sensor reports 2D touch coordinates -->
    <bool name="doze_double_tap_reports_touch_coordinates">true</bool>

    <!-- Whether to show a warning notification when the device reaches a certain temperature. -->
    <integer name="config_showTemperatureWarning">1</integer>

    <!-- Whether to show a alarm dialog when the device of usb cable reaches a certain temperature. -->
    <integer name="config_showTemperatureAlarm">1</integer>

    <!-- Temp at which to show a alarm dialog if config_showTemperatureAlarm is true.
         If < 0, uses the skin temperature sensor shutdown value of index[1] from
         HardwarePropertiesManager#getDeviceTemperatures -->
    <integer name="config_alarmTemperature">63</integer>

    <!-- Whether or not beep sound should be when overheat -->
    <bool name="config_alarmTemperatureBeepSound">false</bool>

    <!-- Fudge factor for how much below the shutdown temp to show the warning. -->
    <integer name="config_warningTemperatureTolerance">4</integer>

    <!-- Fudge factor for how much below the overheat temp to dismiss alarm. -->
    <integer name="config_alarmTemperatureTolerance">10</integer>

    <!-- The default tiles to display in QuickSettings -->
    <string name="quick_settings_tiles_default" translatable="false">
        wifi,cell,hotspot,flashlight,airplane,usb_tether
    </string>
</resources>
